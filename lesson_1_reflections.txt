How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    As Bug can only be introduced only if the newer version of the file has some changes that is not coded correctly
    so we can easily check with previous versions that what went wrong in upcoming to the newer stage

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    It helps in finding out the mistakes that have went and we can check what went wrong .

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

   	Unlike , Google Docs each word we write gives meaning to the entire document, but in writing code , unless we write all the code in proper manner it does not become write then

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Because the version of any software does not depend only on a single file, it is a set of programs (or files) that have been programmed to do each specific task

How can you use the commands git log and git diff to view the history of files?

    These commands gives the details analysis by comparing the files and what changes have been made in these files. 

How might using version control make you more confident to make changes that
could break something?

    Evolving is another name for version control , since the day till mankind was just a species of monkeys, we evolved and evolved to become a man, now we see what a man has power to so ie. change the world, This is the same case for softwares , we evolve the software and make it better day by day so at one day it will be the awesomest software , and who knows might change the world .

Now that you have your workspace set up, what do you want to try using Git for?

    To improve the version control of my projects, because it is cool to work with others and also collaborate in the open source community.
